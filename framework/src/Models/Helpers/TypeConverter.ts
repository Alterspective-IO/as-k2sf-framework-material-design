import { Type } from "../../interfaces/AutoGenerated/so-controller";

export type JavaScriptType = 
{
    name: "string" | "number" | "date" | "boolean" | "object" | "function",
    type: object,
    parse(strValue:string) : string | number | Date | boolean 
}


export function k2FieldTypeToJavascriptType(k2Type: Type) : JavaScriptType {
  
    let retValue : JavaScriptType =
    {
      name: "string",
      type: String,
      parse: function (strValue: string):  string  {
          return strValue;
      }
    }
  
    switch (k2Type) {
    case Type.GUID:
    case Type.Hyperlink:
    case Type.Image:
    case Type.MultiValue:
    case Type.Memo:
    case Type.Text:
    case Type.Empty:
    case Type.Time:
    case Type.AutoGUID:       
        retValue.name="string"
        retValue.type=String
      break;
    case Type.Number:
      retValue.parse=  (strValue: string):  number => Number.parseInt(strValue)
    case Type.AutoNumber:
    case Type.Decimal:
        retValue.name="number"
        retValue.type=Number
        retValue.parse=  (strValue: string):  number => Number.parseFloat(strValue)
      break;
    case Type.Date:
    case Type.DateTime:
        retValue.name="date"
        retValue.type=Date
        retValue.parse=  (strValue: string):  Date => new Date(Date.parse(strValue))
      break;
    case Type.YesNo:
        retValue.name="boolean"
        retValue.type=Boolean
        retValue.parse=  (strValue: string):  boolean => (strValue =="true")
      break;
    default:
        retValue.name="string"
        retValue.type=String
      break;
  }

  return retValue
}


