import { ContainerType, ControlType } from "../interfaces/enums";
import { TypeView } from "../interfaces/AutoGenerated/so-controller";
import { IContainer } from "../interfaces/IContainer";
import { IForm } from "../interfaces/IForm";
import { IFramework } from "../interfaces/IFramework";
import { IExpressions } from "../interfaces/IExpressions";
import { IViews } from "../interfaces/IViews";
import { IParametersArray } from "../interfaces/Iparameters";
export declare class Form implements IForm, IContainer {
    url: string;
    _as: IFramework;
    constructor(as: IFramework);
    rawData: any;
    configurationName: string;
    containerSubType: TypeView | ControlType;
    parent?: IContainer | undefined;
    id?: string | undefined;
    containerType: ContainerType;
    expressions: IExpressions;
    validationGroups: string;
    validationPatterns: string;
    views: IViews;
    formId: string;
    get parameters(): IParametersArray;
    get name(): string;
    get controlsBaseId(): string;
    get exists(): boolean;
    getHTMLElement(): HTMLElement;
}
